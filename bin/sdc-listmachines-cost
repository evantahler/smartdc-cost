#!/usr/bin/env node

var common = require(__dirname + "/../lib/common.js").common;
var argv = require('optimist').argv;
var util = require('util');

var foramts = {
  human: function(results, period){
    console.log("Devices:");
    for(var i in results.devices){
      var device = results.devices[i];
      console.log(" > " + device.name + " @ " + device.ip + " (" + device.type + ") => $" + device.prices[period] + "/" + period);
    }
    console.log("");
    console.log("Total:");
    console.log(" > $" + results.totals.hour + "/hour");
    console.log(" > $" + results.totals.day + "/day");
    console.log(" > $" + results.totals.month + "/month");
    console.log(" > $" + results.totals.year + "/year");
  },
  JSON: function(results, period){
    console.log(util.inspect(results, false, 10, true));
  },
  json: function(results, period){
    console.log(util.inspect(results, false, 10, true));
  },
};

var sorts = {
  alphabetical: function(a,b){
    if(a.name > b.name){ return 1; }
    if(a.name == b.name){ return 0; }
    if(a.name < b.name){ return -1; }
  },
  price: function(a,b){
    if(a.prices.day > b.prices.day){ return -1; }
    if(a.prices.day < b.prices.day){ return 1; }
    if(a.prices.day == b.prices.day){ 
      if(a.name > b.name){ return 1; }
      if(a.name == b.name){ return 0; }
      if(a.name < b.name){ return -1; }
    }
  }
};

common.listmachinesCost(function(results){

  var sort = "alphabetical";
  if(argv.sort != null){
    if(typeof sorts[argv.sort] === 'function'){
      sort = argv.sort;
    }
  }
  results.devices.sort(sorts[sort]);

  var format = "JSON";
  if(argv.format != null){
    if(typeof foramts[argv.format] === 'function'){
      format = argv.format;
    }
  }

  var period = "hour"
  if(argv.period != null){
    if(['hour', 'day', 'month', 'year'].indexOf(argv.period) >= 0){
      period = argv.period;
    }
  }

  foramts[format](results, period);
  process.nextTick(function(){ process.exit(); });
});